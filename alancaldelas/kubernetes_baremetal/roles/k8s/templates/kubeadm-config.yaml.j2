---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ ansible_default_ipv4.address }}"
  bindPort: 6443
nodeRegistration:
  criSocket: "unix:///var/run/{{ k8s_container_runtime }}/{{ k8s_container_runtime }}.sock"
  imagePullPolicy: IfNotPresent
  name: {{ ansible_hostname }}
  taints: null
{% if k8s_node_role == 'master' %}
  kubeletExtraArgs:
    node-labels: "node-role.kubernetes.io/control-plane="
{% endif %}
{% if k8s_kubeadm_init_extra_args %}
  kubeletExtraArgs:
    {{ k8s_kubeadm_init_extra_args }}
{% endif %}
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
clusterName: {{ k8s_cluster_name | default('kubernetes') }}
kubernetesVersion: v{{ kubernetes_version }}
controlPlaneEndpoint: "{{ ansible_default_ipv4.address }}:6443"
networking:
  dnsDomain: cluster.local
  podSubnet: {{ k8s_pod_subnet | default('10.244.0.0/16') }}
  serviceSubnet: {{ k8s_service_subnet | default('10.96.0.0/12') }}
apiServer:
  timeoutForControlPlane: 4m0s
  certSANs:
    - "{{ ansible_hostname }}"
    - "{{ ansible_default_ipv4.address }}"
    - "localhost"
    - "127.0.0.1"
{% if k8s_feature_gates | length > 0 %}
  extraArgs:
    - name: feature-gates
      value: "{{ k8s_feature_gates | join(',') }}"
{% endif %}
{% if k8s_feature_gates | length > 0 %}
controllerManager:
  extraArgs:
    - name: bind-address
      value: "0.0.0.0"
    - name: feature-gates
      value: "{{ k8s_feature_gates | join(',') }}"
{% else %}
controllerManager:
  extraArgs:
    - name: bind-address
      value: "0.0.0.0"
{% endif %}
{% if k8s_feature_gates | length > 0 %}
scheduler:
  extraArgs:
    - name: bind-address
      value: "0.0.0.0"
    - name: feature-gates
      value: "{{ k8s_feature_gates | join(',') }}"
{% else %}
scheduler:
  extraArgs:
    - name: bind-address
      value: "0.0.0.0"
{% endif %}
etcd:
  local:
    dataDir: /var/lib/etcd
dns: {}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 0s
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 0s
    cacheUnauthorizedTTL: 0s
cgroupDriver: systemd
clusterDNS:
  - 10.96.0.10
clusterDomain: cluster.local
containerRuntimeEndpoint: "unix:///var/run/{{ k8s_container_runtime }}/{{ k8s_container_runtime }}.sock"
cpuManagerReconcilePeriod: 0s
evictionPressureTransitionPeriod: 0s
fileCheckFrequency: 0s
healthzBindAddress: 127.0.0.1
healthzPort: 10248
httpCheckFrequency: 0s
imageMinimumGCAge: 0s
logging:
  flushFrequency: 0
  options:
    json:
      infoBufferSize: "0"
  verbosity: 0
memorySwap: {}
nodeStatusReportFrequency: 0s
nodeStatusUpdateFrequency: 0s
rotateCertificates: true
runtimeRequestTimeout: 0s
shutdownGracePeriod: 0s
shutdownGracePeriodCriticalPods: 0s
staticPodPath: /etc/kubernetes/manifests
streamingConnectionIdleTimeout: 0s
syncFrequency: 0s
volumeStatsAggPeriod: 0s
{% if k8s_feature_gates | length > 0 %}
featureGates:
{% for gate in k8s_feature_gates %}
  {{ gate.split('=')[0] }}: {{ gate.split('=')[1] | lower }}
{% endfor %}
{% endif %}
{% if k8s_kubelet_extra_args %}
{{ k8s_kubelet_extra_args }}
{% endif %}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clientConnection:
  acceptContentTypes: ""
  burst: 0
  contentType: ""
  kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
  qps: 0
clusterCIDR: {{ k8s_pod_subnet | default('10.244.0.0/16') }}
configSyncPeriod: 0s
conntrack:
  maxPerCore: null
  min: null
  tcpBeLiberal: false
  tcpCloseWaitTimeout: null
  tcpEstablishedTimeout: null
  udpStreamTimeout: 0s
  udpTimeout: 0s
detectLocal:
  bridgeInterface: ""
  interfaceNamePrefix: ""
detectLocalMode: ""
enableProfiling: false
healthzBindAddress: ""
hostnameOverride: ""
iptables:
  localhostNodePorts: null
  masqueradeAll: false
  masqueradeBit: null
  minSyncPeriod: 0s
  syncPeriod: 0s
ipvs:
  excludeCIDRs: null
  minSyncPeriod: 0s
  scheduler: ""
  strictARP: false
  syncPeriod: 0s
  tcpFinTimeout: 0s
  tcpTimeout: 0s
  udpTimeout: 0s
metricsBindAddress: ""
mode: iptables
nftables:
  masqueradeAll: false
  masqueradeBit: null
  minSyncPeriod: 0s
  syncPeriod: 0s
nodePortAddresses: null
oomScoreAdj: null
portRange: ""
showHiddenMetricsForVersion: ""
winkernel:
  enableDSR: false
  forwardHealthCheckVip: false
  networkName: ""
  rootHnsEndpointName: ""
  sourceVip: ""
{% if k8s_feature_gates | length > 0 %}
featureGates:
{% for gate in k8s_feature_gates %}
  {{ gate.split('=')[0] }}: {{ gate.split('=')[1] | lower }}
{% endfor %}
{% endif %}
